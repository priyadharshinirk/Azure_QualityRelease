{
	"info": {
		"_postman_id": "5a44128e-85b7-423d-bdb1-72b304e9bd01",
		"name": "Data Validation Test Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"var json = pm.response.json();",
							"pm.environment.set(\"id\", json.id);",
							"pm.test(\"User name is available\", function () {",
							"    pm.expect(json.name).to.contain(pm.environment.get(\"name\"));",
							"});",
							"pm.test(\"id is available\", function () {",
							"    pm.expect(json.id).to.eql(pm.environment.get(\"id\"));",
							"});",
							"pm.test(\"job is available\", function () {",
							"    pm.expect(json.job).to.eql(pm.environment.get(\"job\"));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"job\": \"{{job}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}",
					"host": [
						"{{url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"var json = pm.response.json();",
							"pm.test(\"Return 12 users\", function () {",
							"    pm.expect(json.total).to.eql(12);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}?page=2",
					"host": [
						"{{url}}"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var json = pm.response.json();\r",
							"pm.environment.set(\"name\", json.name);\r",
							"pm.test(\"User name is available\", function () {\r",
							"    pm.expect(json.name).to.contain(pm.environment.get(\"name\"));\r",
							"});\r",
							"pm.test(\"job is available\", function () {\r",
							"    pm.expect(json.job).to.eql(pm.environment.get(\"job\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Priya Updated\",\r\n    \"job\": \"{{job}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Email id is available\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.email).to.contain(\"george.bluth@reqres.in\");\r",
							"});\r",
							"pm.test(\"first_name is available\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.contain(\"George\");\r",
							"});\r",
							"pm.test(\"Status code name is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		}
	]
}